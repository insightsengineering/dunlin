% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reformat.R
\name{h_reformat_tab}
\alias{h_reformat_tab}
\title{Reformat a Variable in a Specific Column and Table}
\usage{
h_reformat_tab(db, tab, col, format)
}
\arguments{
\item{db}{(\code{dm}) object input.}

\item{tab}{(\code{string}) the name of a table.}

\item{col}{(\code{string}) the name of a variable in a table.}

\item{format}{(\code{rule}) object.}
}
\value{
a \code{dm} object with re coded variables respecting its original data type.
}
\description{
Reformat a Variable in a Specific Column and Table
}
\note{
If \code{tab} is not a valid table name of the \code{db} object, the original object is returned. Similarly, if \code{col} is
not a valid column of the selected \code{tab} in the object, the original object is returned. This behavior is desirable
when a variable that exists in most but not all tables has to be re coded.

Both empty string and \code{NAs} can be re coded if needed.

The \code{label} attribute of the column is preserved.
}
\examples{
\dontrun{
library(dm)

df1 <- data.frame(
  "char" = c("", "b", NA, "a", "k", "x"),
  "fact" = factor(c("f1", "f2", NA, NA, "f1", "f1"))
)
df2 <- data.frame(
  "char" = c("a", "b", NA, "a", "k", "x"),
  "fact" = factor(c("f1", "f2", NA, NA, "f1", "f1"))
)

db <- dm(df1, df2)

dic_map <- rule(A = "a", B = "b", Missing = NA, Empty = "")
res <- h_reformat_tab(db, "df1", "char", dic_map)
}
}
\keyword{internal}
