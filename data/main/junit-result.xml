<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="assertions" timestamp="2023-05-23T03:23:10Z" hostname="dd85b393a10f" tests="14" skipped="0" failures="0" errors="0" time="0.109">
    <testcase time="0.016" classname="assertions" name="assert_valid_format_works_as_expected"/>
    <testcase time="0.035" classname="assertions" name="assert_valid_format_works_as_expected"/>
    <testcase time="0.0279999999999999" classname="assertions" name="assert_valid_format_fails_as_expected"/>
    <testcase time="0.002" classname="assertions" name="assert_valid_format_fails_as_expected"/>
    <testcase time="0.001" classname="assertions" name="assert_valid_format_fails_as_expected"/>
    <testcase time="0.001" classname="assertions" name="assert_valid_format_fails_as_expected"/>
    <testcase time="0.001" classname="assertions" name="assert_valid_format_fails_as_expected"/>
    <testcase time="0.005" classname="assertions" name="assert_valid_list_format_works_as_expected"/>
    <testcase time="0.004" classname="assertions" name="assert_valid_list_format_works_as_expected"/>
    <testcase time="0.011" classname="assertions" name="assert_valid_list_format_fails_as_expected"/>
    <testcase time="0.001" classname="assertions" name="assert_valid_list_format_fails_as_expected"/>
    <testcase time="0.001" classname="assertions" name="assert_valid_list_format_fails_as_expected"/>
    <testcase time="0.002" classname="assertions" name="assert_valid_list_format_fails_as_expected"/>
    <testcase time="0.001" classname="assertions" name="assert_valid_list_format_fails_as_expected"/>
  </testsuite>
  <testsuite name="co_relevels" timestamp="2023-05-23T03:23:11Z" hostname="dd85b393a10f" tests="22" skipped="0" failures="0" errors="0" time="0.13">
    <testcase time="0.023" classname="co_relevels" name="co_relevels_works_as_expected."/>
    <testcase time="0.004" classname="co_relevels" name="co_relevels_works_as_expected."/>
    <testcase time="0.004" classname="co_relevels" name="co_relevels_works_as_expected."/>
    <testcase time="0.004" classname="co_relevels" name="co_relevels_works_as_expected."/>
    <testcase time="0.004" classname="co_relevels" name="co_relevels_works_as_expected."/>
    <testcase time="0.011" classname="co_relevels" name="co_relevels_works_as_expected_with_tibbles."/>
    <testcase time="0.004" classname="co_relevels" name="co_relevels_works_as_expected_with_tibbles."/>
    <testcase time="0.004" classname="co_relevels" name="co_relevels_works_as_expected_with_tibbles."/>
    <testcase time="0.004" classname="co_relevels" name="co_relevels_works_as_expected_with_tibbles."/>
    <testcase time="0.004" classname="co_relevels" name="co_relevels_works_as_expected_with_tibbles."/>
    <testcase time="0.00600000000000001" classname="co_relevels" name="co_relevels_works_as_expected_when_only_a_subset_of_levels_is_used."/>
    <testcase time="0.004" classname="co_relevels" name="co_relevels_works_as_expected_when_only_a_subset_of_levels_is_used."/>
    <testcase time="0.004" classname="co_relevels" name="co_relevels_works_as_expected_when_only_a_subset_of_levels_is_used."/>
    <testcase time="0.003" classname="co_relevels" name="co_relevels_works_as_expected_when_only_a_subset_of_levels_is_used."/>
    <testcase time="0.003" classname="co_relevels" name="co_relevels_works_as_expected_when_only_a_subset_of_levels_is_used."/>
    <testcase time="0.00599999999999989" classname="co_relevels" name="co_relevels_works_as_expected_when_a_supplementary_level_is_used."/>
    <testcase time="0.00700000000000001" classname="co_relevels" name="co_relevels_works_as_expected_when_a_supplementary_level_is_used."/>
    <testcase time="0.004" classname="co_relevels" name="co_relevels_works_as_expected_when_a_supplementary_level_is_used."/>
    <testcase time="0.004" classname="co_relevels" name="co_relevels_works_as_expected_when_a_supplementary_level_is_used."/>
    <testcase time="0.004" classname="co_relevels" name="co_relevels_works_as_expected_when_a_supplementary_level_is_used."/>
    <testcase time="0.01" classname="co_relevels" name="co_relevels_retuns_an_error_when_the_matching_between_the_selected_column_is_not_unique."/>
    <testcase time="0.00900000000000001" classname="co_relevels" name="co_relevels_retuns_an_error_when_NAs_are_present."/>
  </testsuite>
  <testsuite name="cut_by_group" timestamp="2023-05-23T03:23:11Z" hostname="dd85b393a10f" tests="14" skipped="0" failures="0" errors="0" time="0.076">
    <testcase time="0.022" classname="cut_by_group" name="cut_by_group_works_as_expected."/>
    <testcase time="0.00100000000000011" classname="cut_by_group" name="cut_by_group_works_as_expected."/>
    <testcase time="0.00399999999999978" classname="cut_by_group" name="cut_by_group_works_as_expected."/>
    <testcase time="0.004" classname="cut_by_group" name="cut_by_group_works_as_expected."/>
    <testcase time="0.00600000000000001" classname="cut_by_group" name="cut_by_group_works_as_expected_when_supplementary_group_information_are_provided."/>
    <testcase time="0.004" classname="cut_by_group" name="cut_by_group_works_as_expected_when_supplementary_group_information_are_provided."/>
    <testcase time="0.004" classname="cut_by_group" name="cut_by_group_works_as_expected_when_supplementary_group_information_are_provided."/>
    <testcase time="0.00300000000000011" classname="cut_by_group" name="cut_by_group_works_as_expected_when_supplementary_group_information_are_provided."/>
    <testcase time="0.00600000000000001" classname="cut_by_group" name="cut_by_group_returns_NA_for_parameters_values_that_are_covered."/>
    <testcase time="0.00099999999999989" classname="cut_by_group" name="cut_by_group_returns_NA_for_parameters_values_that_are_covered."/>
    <testcase time="0.004" classname="cut_by_group" name="cut_by_group_returns_NA_for_parameters_values_that_are_covered."/>
    <testcase time="0.004" classname="cut_by_group" name="cut_by_group_returns_NA_for_parameters_values_that_are_covered."/>
    <testcase time="0.004" classname="cut_by_group" name="cut_by_group_returns_NA_for_parameters_values_that_are_covered."/>
    <testcase time="0.00900000000000012" classname="cut_by_group" name="cut_by_group_fails_when_the_number_of_labels_doesn_t_fit_the_number_of_breaks."/>
  </testsuite>
  <testsuite name="explicit_na" timestamp="2023-05-23T03:23:11Z" hostname="dd85b393a10f" tests="24" skipped="0" failures="0" errors="0" time="0.092">
    <testcase time="0.034" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_default_options."/>
    <testcase time="0.00099999999999989" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_default_options."/>
    <testcase time="0.002" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_default_options."/>
    <testcase time="0.00100000000000011" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_default_options."/>
    <testcase time="0.00099999999999989" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_default_options."/>
    <testcase time="0.00100000000000011" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_default_options."/>
    <testcase time="0.00099999999999989" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_default_options."/>
    <testcase time="0.00100000000000011" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_default_options."/>
    <testcase time="0.00099999999999989" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_default_options."/>
    <testcase time="0.00100000000000011" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_default_options."/>
    <testcase time="0.0149999999999999" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_optional_arguments."/>
    <testcase time="0.004" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_optional_arguments."/>
    <testcase time="0.00100000000000011" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_optional_arguments."/>
    <testcase time="0.002" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_optional_arguments."/>
    <testcase time="0.00099999999999989" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_optional_arguments."/>
    <testcase time="0.00100000000000011" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_optional_arguments."/>
    <testcase time="0.004" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_optional_arguments."/>
    <testcase time="0.00099999999999989" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_optional_arguments."/>
    <testcase time="0.004" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_optional_arguments."/>
    <testcase time="0.002" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_optional_arguments."/>
    <testcase time="0.00099999999999989" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_optional_arguments."/>
    <testcase time="0.00100000000000011" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_optional_arguments."/>
    <testcase time="0.0069999999999999" classname="explicit_na" name="ls_explicit_na_skip_if_all_datasets_excluded"/>
    <testcase time="0.004" classname="explicit_na" name="ls_explicit_na_skip_if_all_datasets_excluded"/>
  </testsuite>
  <testsuite name="filter" timestamp="2023-05-23T03:23:11Z" hostname="dd85b393a10f" tests="61" skipped="0" failures="0" errors="0" time="0.278">
    <testcase time="0.01" classname="filter" name="log_filter_works_for_single_data.frame"/>
    <testcase time="0.00700000000000012" classname="filter" name="log_filter_works_for_single_data.frame"/>
    <testcase time="0.00299999999999989" classname="filter" name="log_filter_works_for_single_data.frame"/>
    <testcase time="0.002" classname="filter" name="log_filter_works_for_single_data.frame"/>
    <testcase time="0.00499999999999989" classname="filter" name="log_filter_works_for_single_data.frame"/>
    <testcase time="0.00700000000000012" classname="filter" name="log_filter_works_for_single_data.frame"/>
    <testcase time="0.00299999999999989" classname="filter" name="log_filter_works_for_single_data.frame"/>
    <testcase time="0.00500000000000012" classname="filter" name="log_filter_works_for_single_data.frame"/>
    <testcase time="0.004" classname="filter" name="log_filter_works_for_single_data.frame"/>
    <testcase time="0.00800000000000001" classname="filter" name="log_filter_fails_if_variable_outside_data_environment"/>
    <testcase time="0.002" classname="filter" name="log_filter_fails_if_variable_outside_data_environment"/>
    <testcase time="0.00600000000000001" classname="filter" name="log_filter_works_for_list_of_data.frame"/>
    <testcase time="0.00600000000000001" classname="filter" name="log_filter_works_for_list_of_data.frame"/>
    <testcase time="0.004" classname="filter" name="log_filter_works_for_list_of_data.frame"/>
    <testcase time="0.002" classname="filter" name="log_filter_works_for_list_of_data.frame"/>
    <testcase time="0.00600000000000001" classname="filter" name="log_filter_works_for_list_of_data.frame"/>
    <testcase time="0.004" classname="filter" name="log_filter_works_for_list_of_data.frame"/>
    <testcase time="0.00299999999999989" classname="filter" name="log_filter_works_for_list_of_data.frame"/>
    <testcase time="0.004" classname="filter" name="log_filter_works_for_list_of_data.frame"/>
    <testcase time="0.00700000000000012" classname="filter" name="log_filter_subset_USUBJID_for_list_of_data.frame"/>
    <testcase time="0.0069999999999999" classname="filter" name="log_filter_subset_USUBJID_for_list_of_data.frame"/>
    <testcase time="0.004" classname="filter" name="log_filter_subset_USUBJID_for_list_of_data.frame"/>
    <testcase time="0.004" classname="filter" name="log_filter_subset_USUBJID_for_list_of_data.frame"/>
    <testcase time="0.004" classname="filter" name="log_filter_subset_USUBJID_for_list_of_data.frame"/>
    <testcase time="0.00299999999999989" classname="filter" name="log_filter_subset_USUBJID_for_list_of_data.frame"/>
    <testcase time="0.004" classname="filter" name="log_filter_subset_USUBJID_for_list_of_data.frame"/>
    <testcase time="0.00600000000000001" classname="filter" name="get_log_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="filter" name="get_log_works_as_expected"/>
    <testcase time="0.004" classname="filter" name="get_log_works_as_expected"/>
    <testcase time="0.004" classname="filter" name="get_log_works_as_expected"/>
    <testcase time="0.002" classname="filter" name="get_log_works_as_expected"/>
    <testcase time="0.002" classname="filter" name="get_log_works_as_expected"/>
    <testcase time="0.004" classname="filter" name="get_log_works_as_expected"/>
    <testcase time="0.004" classname="filter" name="get_log_works_as_expected"/>
    <testcase time="0.00600000000000001" classname="filter" name="get_log_works_as_expected_when_incl.adsl_FALSE"/>
    <testcase time="0.00300000000000011" classname="filter" name="get_log_works_as_expected_when_incl.adsl_FALSE"/>
    <testcase time="0.004" classname="filter" name="get_log_works_as_expected_when_incl.adsl_FALSE"/>
    <testcase time="0.0069999999999999" classname="filter" name="get_log_works_as_expected_when_incl.adsl_FALSE"/>
    <testcase time="0.00600000000000001" classname="filter" name="get_log_works_as_expected_with_suffix"/>
    <testcase time="0.00300000000000011" classname="filter" name="get_log_works_as_expected_with_suffix"/>
    <testcase time="0.004" classname="filter" name="get_log_works_as_expected_with_suffix"/>
    <testcase time="0.004" classname="filter" name="get_log_works_as_expected_with_suffix"/>
    <testcase time="0.00299999999999989" classname="filter" name="get_log_works_as_expected_with_suffix"/>
    <testcase time="0.002" classname="filter" name="get_log_works_as_expected_with_suffix"/>
    <testcase time="0.004" classname="filter" name="get_log_works_as_expected_with_suffix"/>
    <testcase time="0.00500000000000012" classname="filter" name="get_log_works_as_expected_with_suffix"/>
    <testcase time="0.00600000000000001" classname="filter" name="print_log.list_works_as_expected"/>
    <testcase time="0.00499999999999989" classname="filter" name="print_log.list_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="filter" name="print_log.list_works_as_expected"/>
    <testcase time="0.00499999999999989" classname="filter" name="print_log.list_works_as_expected"/>
    <testcase time="0.00700000000000012" classname="filter" name="print_log.list_works_as_expect_when_no_filtering_is_performed"/>
    <testcase time="0.0069999999999999" classname="filter" name="print_log.list_works_as_expect_when_no_filtering_is_performed"/>
    <testcase time="0.00300000000000011" classname="filter" name="print_log.list_works_as_expect_when_no_filtering_is_performed"/>
    <testcase time="0.00499999999999989" classname="filter" name="print_log.list_works_as_expect_when_no_filtering_is_performed"/>
    <testcase time="0.004" classname="filter" name="print_log.list_works_as_expect_when_no_filtering_is_performed"/>
    <testcase time="0.00300000000000011" classname="filter" name="print_log.list_works_as_expect_when_no_filtering_is_performed"/>
    <testcase time="0.00499999999999989" classname="filter" name="print_log.list_works_as_expect_when_no_filtering_is_performed"/>
    <testcase time="0.00700000000000012" classname="filter" name="print_log.data.frame_works_as_expected"/>
    <testcase time="0.004" classname="filter" name="print_log.data.frame_works_as_expected"/>
    <testcase time="0.00499999999999989" classname="filter" name="print_log.data.frame_works_as_expected"/>
    <testcase time="0.00500000000000012" classname="filter" name="print_log.data.frame_works_as_expected"/>
  </testsuite>
  <testsuite name="join_adsub_adsl" timestamp="2023-05-23T03:23:11Z" hostname="dd85b393a10f" tests="15" skipped="0" failures="0" errors="0" time="0.103">
    <testcase time="0.028" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_with_default_values"/>
    <testcase time="0.00099999999999989" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_with_default_values"/>
    <testcase time="0.00100000000000011" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_with_default_values"/>
    <testcase time="0.004" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_with_default_values"/>
    <testcase time="0.00299999999999989" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_with_default_values"/>
    <testcase time="0.014" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_when_no_column_is_selected"/>
    <testcase time="0.00100000000000011" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_when_no_column_is_selected"/>
    <testcase time="0.00099999999999989" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_when_no_column_is_selected"/>
    <testcase time="0.01" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_when_no_column_is_selected"/>
    <testcase time="0.00100000000000011" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_when_no_column_is_selected"/>
    <testcase time="0.00099999999999989" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_when_no_column_is_selected"/>
    <testcase time="0.0110000000000001" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_when_no_column_is_selected"/>
    <testcase time="0.00099999999999989" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_when_no_column_is_selected"/>
    <testcase time="0.00100000000000011" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_when_no_column_is_selected"/>
    <testcase time="0.0249999999999999" classname="join_adsub_adsl" name="join_adsub_adsl.list_throw_a_warning_when_column_already_exist_in_adsl."/>
  </testsuite>
  <testsuite name="pivot" timestamp="2023-05-23T03:23:11Z" hostname="dd85b393a10f" tests="17" skipped="0" failures="0" errors="0" time="0.129">
    <testcase time="0.0109999999999999" classname="pivot" name="mini_pivot_wider_works_as_expected."/>
    <testcase time="0.004" classname="pivot" name="mini_pivot_wider_works_as_expected."/>
    <testcase time="0.00900000000000012" classname="pivot" name="mini_pivot_wider_returns_an_error_when_required_column_are_not_present."/>
    <testcase time="0.0089999999999999" classname="pivot" name="mini_pivot_wider_returns_an_error_when_data_are_duplicated."/>
    <testcase time="0.00700000000000012" classname="pivot" name="multi_pivot_wider_works_as_expected."/>
    <testcase time="0.004" classname="pivot" name="multi_pivot_wider_works_as_expected."/>
    <testcase time="0.0069999999999999" classname="pivot" name="multi_pivot_wider_works_as_expected_with_drop_na_argument."/>
    <testcase time="0.004" classname="pivot" name="multi_pivot_wider_works_as_expected_with_drop_na_argument."/>
    <testcase time="0.026" classname="pivot" name="multi_pivot_wider_works_as_expected_with_drop_na_argument."/>
    <testcase time="0.00500000000000012" classname="pivot" name="multi_pivot_wider_works_as_expected_with_drop_na_argument."/>
    <testcase time="0.0089999999999999" classname="pivot" name="multi_pivot_wider_works_as_expected_when_the_unique_identification_deoends_on_several_columns"/>
    <testcase time="0.004" classname="pivot" name="multi_pivot_wider_works_as_expected_when_the_unique_identification_deoends_on_several_columns"/>
    <testcase time="0.00300000000000011" classname="pivot" name="multi_pivot_wider_works_as_expected_when_the_unique_identification_deoends_on_several_columns"/>
    <testcase time="0.01" classname="pivot" name="poly_pivot_wider_works_as_expected."/>
    <testcase time="0.00399999999999978" classname="pivot" name="poly_pivot_wider_works_as_expected."/>
    <testcase time="0.00900000000000012" classname="pivot" name="poly_pivot_wider_works_as_expected_with_default_label."/>
    <testcase time="0.004" classname="pivot" name="poly_pivot_wider_works_as_expected_with_default_label."/>
  </testsuite>
  <testsuite name="propagate" timestamp="2023-05-23T03:23:11Z" hostname="dd85b393a10f" tests="3" skipped="2" failures="0" errors="0" time="0.112">
    <testcase time="0.071" classname="propagate" name="propagate.list_works_as_expected">
      <skipped message="Reason: On CRAN ('test-propagate.R:20:3')"/>
    </testcase>
    <testcase time="0.032" classname="propagate" name="propagate.list_works_as_expected_in_safe_mode"/>
    <testcase time="0.0089999999999999" classname="propagate" name="propagate.list_works_as_expected_in_safe_mode">
      <skipped message="Reason: On CRAN ('test-propagate.R:48:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="reformat" timestamp="2023-05-23T03:23:12Z" hostname="dd85b393a10f" tests="29" skipped="0" failures="0" errors="0" time="0.202">
    <testcase time="0.0430000000000001" classname="reformat" name="reformat_fails_for_numeric_or_logical"/>
    <testcase time="0.0069999999999999" classname="reformat" name="reformat_for_characters_works_as_expected_when_string_as_fct_is_FALSE"/>
    <testcase time="0.00700000000000012" classname="reformat" name="reformat_for_characters_works_as_expected_when_empty_as_na_is_TRUE"/>
    <testcase time="0.00800000000000001" classname="reformat" name="reformat_for_characters_works_as_expected_when_string_as_fct_is_TRUE"/>
    <testcase time="0.00800000000000001" classname="reformat" name="reformat_for_characters_works_as_expected_when_string_as_fct_is_TRUE_and_na_last_is_false"/>
    <testcase time="0.00800000000000001" classname="reformat" name="reformat_for_characters_works_as_expected_when_string_as_fct_is_TRUE_and_na_last_is_false"/>
    <testcase time="0.0069999999999999" classname="reformat" name="reformat_for_factors_works_as_expected"/>
    <testcase time="0.00500000000000012" classname="reformat" name="reformat_for_factors_works_as_expected"/>
    <testcase time="0.004" classname="reformat" name="reformat_for_factors_works_as_expected"/>
    <testcase time="0.00600000000000001" classname="reformat" name="reformat_factor_works_as_expected_when_the_level_doesn_t_exist"/>
    <testcase time="0.004" classname="reformat" name="reformat_factor_works_as_expected_when_the_level_doesn_t_exist"/>
    <testcase time="0.00600000000000001" classname="reformat" name="reformat_factor_works_as_expected_when_na_last_FALSE"/>
    <testcase time="0.00299999999999989" classname="reformat" name="reformat_factor_works_as_expected_when_na_last_FALSE"/>
    <testcase time="0.00600000000000001" classname="reformat" name="reformat_factor_works_as_expected_when_empty_as_na_is_TRUE"/>
    <testcase time="0.004" classname="reformat" name="reformat_factor_works_as_expected_when_empty_as_na_is_TRUE"/>
    <testcase time="0.00600000000000001" classname="reformat" name="reformat_factor_works_as_expected_when_the_level_doesn_t_exist_and_na_last_is_false."/>
    <testcase time="0.004" classname="reformat" name="reformat_factor_works_as_expected_when_the_level_doesn_t_exist_and_na_last_is_false."/>
    <testcase time="0.0109999999999999" classname="reformat" name="reformat_for_list_works_as_expected"/>
    <testcase time="0.004" classname="reformat" name="reformat_for_list_works_as_expected"/>
    <testcase time="0.004" classname="reformat" name="reformat_for_list_works_as_expected"/>
    <testcase time="0.004" classname="reformat" name="reformat_for_list_works_as_expected"/>
    <testcase time="0.004" classname="reformat" name="reformat_for_list_works_as_expected"/>
    <testcase time="0.00600000000000001" classname="reformat" name="reformat_for_list_works_as_does_not_change_the_data_for_no_rules"/>
    <testcase time="0.004" classname="reformat" name="reformat_for_list_works_as_does_not_change_the_data_for_no_rules"/>
    <testcase time="0.00600000000000001" classname="reformat" name="reformat_for_list_works_for_empty_rule"/>
    <testcase time="0.004" classname="reformat" name="reformat_for_list_works_for_empty_rule"/>
    <testcase time="0.00700000000000012" classname="reformat" name="empty_rule_do_nothing_to_input"/>
    <testcase time="0.00499999999999989" classname="reformat" name="empty_rule_do_nothing_to_input"/>
    <testcase time="0.00700000000000012" classname="reformat" name="empty_rule_do_nothing_to_input"/>
  </testsuite>
  <testsuite name="rules" timestamp="2023-05-23T03:23:12Z" hostname="dd85b393a10f" tests="25" skipped="2" failures="0" errors="0" time="0.339">
    <testcase time="0.00800000000000001" classname="rules" name="rule_create_works_with_arguments"/>
    <testcase time="0.151" classname="rules" name="rule_create_works_with_arguments"/>
    <testcase time="0.004" classname="rules" name="rule_create_works_with_arguments"/>
    <testcase time="0.00500000000000034" classname="rules" name="rule_coerce_logical_numeric_to_character"/>
    <testcase time="0.00599999999999978" classname="rules" name="rule_coerce_logical_numeric_to_character"/>
    <testcase time="0.00099999999999989" classname="rules" name="rule_coerce_logical_numeric_to_character"/>
    <testcase time="0.00599999999999978" classname="rules" name="rule_coerce_logical_numeric_to_character"/>
    <testcase time="0.004" classname="rules" name="rule_works_for_multiple_map"/>
    <testcase time="0.00700000000000012" classname="rules" name="rule_works_for_multiple_map"/>
    <testcase time="0.0089999999999999" classname="rules" name="rule_fails_when_one_value_is_mapped_to_multiple"/>
    <testcase time="0.00600000000000023" classname="rules" name="rule_fails_when_one_value_is_mapped_to_multiple"/>
    <testcase time="0.00800000000000001" classname="rules" name="rule_fails_for_values_that_is_not_character_logical_numeric"/>
    <testcase time="0.0249999999999999" classname="rules" name="rule_printed_correctly">
      <skipped message="Reason: On CRAN ('test-rules.R:45:3')"/>
    </testcase>
    <testcase time="0.0209999999999999" classname="rules" name="emtpy_rule_is_length_0_character"/>
    <testcase time="0.00999999999999979" classname="rules" name="emtpy_rule_printed_correctly">
      <skipped message="Reason: On CRAN ('test-rules.R:55:3')"/>
    </testcase>
    <testcase time="0.0170000000000003" classname="rules" name="list2rules_works_as_expected"/>
    <testcase time="0.00099999999999989" classname="rules" name="list2rules_works_as_expected"/>
    <testcase time="0.00499999999999989" classname="rules" name="list2rules_works_as_expected"/>
    <testcase time="0.0129999999999999" classname="rules" name="list2rules_fails_as_expected"/>
    <testcase time="0.00100000000000033" classname="rules" name="list2rules_fails_as_expected"/>
    <testcase time="0.00199999999999978" classname="rules" name="list2rules_fails_as_expected"/>
    <testcase time="0.0089999999999999" classname="rules" name="as.list_convert_rules_into_list_correctly"/>
    <testcase time="0.00800000000000001" classname="rules" name="as.list_and_rule_are_reversible"/>
    <testcase time="0.00700000000000012" classname="rules" name="list_of_rules_are_read_correctly"/>
    <testcase time="0.00499999999999989" classname="rules" name="list_of_rules_are_read_correctly"/>
  </testsuite>
  <testsuite name="unite" timestamp="2023-05-23T03:23:12Z" hostname="dd85b393a10f" tests="7" skipped="0" failures="0" errors="0" time="0.062">
    <testcase time="0.0180000000000002" classname="unite" name="ls_unite_works_as_expected_with_factors"/>
    <testcase time="0.004" classname="unite" name="ls_unite_works_as_expected_with_factors"/>
    <testcase time="0.0129999999999999" classname="unite" name="ls_unite_works_as_expected_with_factors"/>
    <testcase time="0.0089999999999999" classname="unite" name="ls_unite_works_as_expected_with_character"/>
    <testcase time="0.004" classname="unite" name="ls_unite_works_as_expected_with_character"/>
    <testcase time="0.0100000000000002" classname="unite" name="ls_unite_works_as_expected_with_more_than_2_columns"/>
    <testcase time="0.004" classname="unite" name="ls_unite_works_as_expected_with_more_than_2_columns"/>
  </testsuite>
  <testsuite name="utils" timestamp="2023-05-23T03:23:12Z" hostname="dd85b393a10f" tests="30" skipped="0" failures="0" errors="0" time="0.105">
    <testcase time="0.00800000000000001" classname="utils" name="h_ws_to_na_works_as_expected."/>
    <testcase time="0.00099999999999989" classname="utils" name="h_ws_to_na_works_as_expected."/>
    <testcase time="0.00199999999999978" classname="utils" name="h_ws_to_na_works_as_expected."/>
    <testcase time="0.00100000000000033" classname="utils" name="h_ws_to_na_works_as_expected."/>
    <testcase time="0.00300000000000011" classname="utils" name="h_ws_to_na_works_as_expected."/>
    <testcase time="0.00599999999999978" classname="utils" name="h_ws_to_explicit_na_works_as_expected."/>
    <testcase time="0.00099999999999989" classname="utils" name="h_ws_to_explicit_na_works_as_expected."/>
    <testcase time="0.00200000000000022" classname="utils" name="h_ws_to_explicit_na_works_as_expected."/>
    <testcase time="0.00099999999999989" classname="utils" name="h_ws_to_explicit_na_works_as_expected."/>
    <testcase time="0.00499999999999989" classname="utils" name="h_ws_to_explicit_na_do_not_add_NA_level_when_it_do_not_exist"/>
    <testcase time="0.004" classname="utils" name="h_ws_to_explicit_na_do_not_add_NA_level_when_it_do_not_exist"/>
    <testcase time="0.00600000000000023" classname="utils" name="h_as_factor_works_as_expected"/>
    <testcase time="0.00099999999999989" classname="utils" name="h_as_factor_works_as_expected"/>
    <testcase time="0.004" classname="utils" name="h_as_factor_works_as_expected"/>
    <testcase time="0.004" classname="utils" name="h_as_factor_works_as_expected"/>
    <testcase time="0.00200000000000022" classname="utils" name="h_as_factor_works_as_expected"/>
    <testcase time="0.00099999999999989" classname="utils" name="h_as_factor_works_as_expected"/>
    <testcase time="0.004" classname="utils" name="h_as_factor_works_as_expected"/>
    <testcase time="0.004" classname="utils" name="h_as_factor_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="utils" name="h_as_factor_works_as_expected"/>
    <testcase time="0.00099999999999989" classname="utils" name="h_as_factor_works_as_expected"/>
    <testcase time="0.00499999999999989" classname="utils" name="h_as_factor_works_as_expected"/>
    <testcase time="0.004" classname="utils" name="h_as_factor_works_as_expected"/>
    <testcase time="0.00200000000000022" classname="utils" name="h_as_factor_works_as_expected"/>
    <testcase time="0.00199999999999978" classname="utils" name="h_as_factor_works_as_expected"/>
    <testcase time="0.004" classname="utils" name="attr_label_works_as_expected"/>
    <testcase time="0.004" classname="utils" name="attr_label_works_as_expected"/>
    <testcase time="0.00599999999999978" classname="utils" name="attr_label_works_as_expected"/>
    <testcase time="0.00800000000000001" classname="utils" name="attr_label_df_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="utils" name="attr_label_df_works_as_expected"/>
  </testsuite>
</testsuites>
