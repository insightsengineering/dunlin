<?xml version="1.0" encoding="UTF-8"?>
<testsuites>
  <testsuite name="assertions" timestamp="2025-04-30T20:27:37Z" hostname="dfca44c794bb" tests="21" skipped="0" failures="0" errors="0" time="0.119">
    <testcase time="0.011" classname="assertions" name="assert_one_tablenames_works_as_expected"/>
    <testcase time="0.018" classname="assertions" name="assert_one_tablenames_works_as_expected"/>
    <testcase time="0.018" classname="assertions" name="assert_one_tablenames_works_as_expected"/>
    <testcase time="0.005" classname="assertions" name="assert_one_tablenames_works_as_expected"/>
    <testcase time="0.0099999999999999" classname="assertions" name="assert_all_tablenames_works_as_expected"/>
    <testcase time="0.004" classname="assertions" name="assert_all_tablenames_works_as_expected"/>
    <testcase time="0.005" classname="assertions" name="assert_all_tablenames_works_as_expected"/>
    <testcase time="0.005" classname="assertions" name="assert_valid_format_works_as_expected"/>
    <testcase time="0.003" classname="assertions" name="assert_valid_format_works_as_expected"/>
    <testcase time="0.01" classname="assertions" name="assert_valid_format_fails_as_expected"/>
    <testcase time="0.002" classname="assertions" name="assert_valid_format_fails_as_expected"/>
    <testcase time="0.001" classname="assertions" name="assert_valid_format_fails_as_expected"/>
    <testcase time="0.001" classname="assertions" name="assert_valid_format_fails_as_expected"/>
    <testcase time="0.001" classname="assertions" name="assert_valid_format_fails_as_expected"/>
    <testcase time="0.005" classname="assertions" name="assert_valid_list_format_works_as_expected"/>
    <testcase time="0.003" classname="assertions" name="assert_valid_list_format_works_as_expected"/>
    <testcase time="0.00900000000000001" classname="assertions" name="assert_valid_list_format_fails_as_expected"/>
    <testcase time="0.004" classname="assertions" name="assert_valid_list_format_fails_as_expected"/>
    <testcase time="0.001" classname="assertions" name="assert_valid_list_format_fails_as_expected"/>
    <testcase time="0.002" classname="assertions" name="assert_valid_list_format_fails_as_expected"/>
    <testcase time="0.001" classname="assertions" name="assert_valid_list_format_fails_as_expected"/>
  </testsuite>
  <testsuite name="co_relevels" timestamp="2025-04-30T20:27:37Z" hostname="dfca44c794bb" tests="22" skipped="0" failures="0" errors="0" time="0.105">
    <testcase time="0.016" classname="co_relevels" name="co_relevels_works_as_expected."/>
    <testcase time="0.003" classname="co_relevels" name="co_relevels_works_as_expected."/>
    <testcase time="0.002" classname="co_relevels" name="co_relevels_works_as_expected."/>
    <testcase time="0.003" classname="co_relevels" name="co_relevels_works_as_expected."/>
    <testcase time="0.003" classname="co_relevels" name="co_relevels_works_as_expected."/>
    <testcase time="0.00900000000000001" classname="co_relevels" name="co_relevels_works_as_expected_with_tibbles."/>
    <testcase time="0.003" classname="co_relevels" name="co_relevels_works_as_expected_with_tibbles."/>
    <testcase time="0.003" classname="co_relevels" name="co_relevels_works_as_expected_with_tibbles."/>
    <testcase time="0.003" classname="co_relevels" name="co_relevels_works_as_expected_with_tibbles."/>
    <testcase time="0.002" classname="co_relevels" name="co_relevels_works_as_expected_with_tibbles."/>
    <testcase time="0.00600000000000001" classname="co_relevels" name="co_relevels_works_as_expected_when_only_a_subset_of_levels_is_used."/>
    <testcase time="0.003" classname="co_relevels" name="co_relevels_works_as_expected_when_only_a_subset_of_levels_is_used."/>
    <testcase time="0.003" classname="co_relevels" name="co_relevels_works_as_expected_when_only_a_subset_of_levels_is_used."/>
    <testcase time="0.002" classname="co_relevels" name="co_relevels_works_as_expected_when_only_a_subset_of_levels_is_used."/>
    <testcase time="0.003" classname="co_relevels" name="co_relevels_works_as_expected_when_only_a_subset_of_levels_is_used."/>
    <testcase time="0.0079999999999999" classname="co_relevels" name="co_relevels_works_as_expected_when_a_supplementary_level_is_used."/>
    <testcase time="0.003" classname="co_relevels" name="co_relevels_works_as_expected_when_a_supplementary_level_is_used."/>
    <testcase time="0.003" classname="co_relevels" name="co_relevels_works_as_expected_when_a_supplementary_level_is_used."/>
    <testcase time="0.003" classname="co_relevels" name="co_relevels_works_as_expected_when_a_supplementary_level_is_used."/>
    <testcase time="0.003" classname="co_relevels" name="co_relevels_works_as_expected_when_a_supplementary_level_is_used."/>
    <testcase time="0.012" classname="co_relevels" name="co_relevels_retuns_an_error_when_the_matching_between_the_selected_column_is_not_unique."/>
    <testcase time="0.00900000000000001" classname="co_relevels" name="co_relevels_retuns_an_error_when_NAs_are_present."/>
  </testsuite>
  <testsuite name="cut_by_group" timestamp="2025-04-30T20:27:37Z" hostname="dfca44c794bb" tests="14" skipped="0" failures="0" errors="0" time="0.065">
    <testcase time="0.019" classname="cut_by_group" name="cut_by_group_works_as_expected."/>
    <testcase time="0.002" classname="cut_by_group" name="cut_by_group_works_as_expected."/>
    <testcase time="0.002" classname="cut_by_group" name="cut_by_group_works_as_expected."/>
    <testcase time="0.003" classname="cut_by_group" name="cut_by_group_works_as_expected."/>
    <testcase time="0.00600000000000001" classname="cut_by_group" name="cut_by_group_works_as_expected_when_supplementary_group_information_are_provided."/>
    <testcase time="0.001" classname="cut_by_group" name="cut_by_group_works_as_expected_when_supplementary_group_information_are_provided."/>
    <testcase time="0.005" classname="cut_by_group" name="cut_by_group_works_as_expected_when_supplementary_group_information_are_provided."/>
    <testcase time="0.003" classname="cut_by_group" name="cut_by_group_works_as_expected_when_supplementary_group_information_are_provided."/>
    <testcase time="0.00600000000000001" classname="cut_by_group" name="cut_by_group_returns_NA_for_parameters_values_that_are_covered."/>
    <testcase time="0.001" classname="cut_by_group" name="cut_by_group_returns_NA_for_parameters_values_that_are_covered."/>
    <testcase time="0.002" classname="cut_by_group" name="cut_by_group_returns_NA_for_parameters_values_that_are_covered."/>
    <testcase time="0.003" classname="cut_by_group" name="cut_by_group_returns_NA_for_parameters_values_that_are_covered."/>
    <testcase time="0.003" classname="cut_by_group" name="cut_by_group_returns_NA_for_parameters_values_that_are_covered."/>
    <testcase time="0.00900000000000001" classname="cut_by_group" name="cut_by_group_fails_when_the_number_of_labels_doesn_t_fit_the_number_of_breaks."/>
  </testsuite>
  <testsuite name="explicit_na" timestamp="2025-04-30T20:27:37Z" hostname="dfca44c794bb" tests="24" skipped="0" failures="0" errors="0" time="0.075">
    <testcase time="0.025" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_default_options."/>
    <testcase time="0.001" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_default_options."/>
    <testcase time="0.002" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_default_options."/>
    <testcase time="0.00099999999999989" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_default_options."/>
    <testcase time="0.001" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_default_options."/>
    <testcase time="0.001" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_default_options."/>
    <testcase time="0.001" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_default_options."/>
    <testcase time="0.001" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_default_options."/>
    <testcase time="0.001" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_default_options."/>
    <testcase time="0.001" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_default_options."/>
    <testcase time="0.013" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_optional_arguments."/>
    <testcase time="0.003" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_optional_arguments."/>
    <testcase time="0.001" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_optional_arguments."/>
    <testcase time="0.001" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_optional_arguments."/>
    <testcase time="0.001" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_optional_arguments."/>
    <testcase time="0.001" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_optional_arguments."/>
    <testcase time="0.003" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_optional_arguments."/>
    <testcase time="0.002" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_optional_arguments."/>
    <testcase time="0.002" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_optional_arguments."/>
    <testcase time="0.002" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_optional_arguments."/>
    <testcase time="0.001" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_optional_arguments."/>
    <testcase time="0.001" classname="explicit_na" name="ls_explicit_na_works_as_expected_with_optional_arguments."/>
    <testcase time="0.00600000000000012" classname="explicit_na" name="ls_explicit_na_skip_if_all_datasets_excluded"/>
    <testcase time="0.00299999999999989" classname="explicit_na" name="ls_explicit_na_skip_if_all_datasets_excluded"/>
  </testsuite>
  <testsuite name="filter" timestamp="2025-04-30T20:27:37Z" hostname="dfca44c794bb" tests="71" skipped="1" failures="0" errors="0" time="0.372">
    <testcase time="0.0130000000000001" classname="filter" name="log_filter.data.frame_works_as_expected"/>
    <testcase time="0.00499999999999989" classname="filter" name="log_filter.data.frame_works_as_expected"/>
    <testcase time="0.00299999999999989" classname="filter" name="log_filter.data.frame_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="filter" name="log_filter.data.frame_works_as_expected"/>
    <testcase time="0.004" classname="filter" name="log_filter.data.frame_works_as_expected"/>
    <testcase time="0.00299999999999989" classname="filter" name="log_filter.data.frame_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="filter" name="log_filter.data.frame_works_as_expected"/>
    <testcase time="0.00499999999999989" classname="filter" name="log_filter.data.frame_works_as_expected"/>
    <testcase time="0.00600000000000001" classname="filter" name="log_filter.data.frame_works_as_expected"/>
    <testcase time="0.01" classname="filter" name="log_filter.data.frame_fails_if_variable_outside_data_environment"/>
    <testcase time="0.00300000000000011" classname="filter" name="log_filter.data.frame_fails_if_variable_outside_data_environment"/>
    <testcase time="0.0069999999999999" classname="filter" name="log_filter.list_works_as_expected"/>
    <testcase time="0.004" classname="filter" name="log_filter.list_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="filter" name="log_filter.list_works_as_expected"/>
    <testcase time="0.00299999999999989" classname="filter" name="log_filter.list_works_as_expected"/>
    <testcase time="0.004" classname="filter" name="log_filter.list_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="filter" name="log_filter.list_works_as_expected"/>
    <testcase time="0.002" classname="filter" name="log_filter.list_works_as_expected"/>
    <testcase time="0.00299999999999989" classname="filter" name="log_filter.list_works_as_expected"/>
    <testcase time="0.046" classname="filter" name="log_filter.list_works_as_expected">
      <skipped message="Reason: On CRAN ('test-filter.R:79:3')"/>
    </testcase>
    <testcase time="0.0349999999999999" classname="filter" name="log_filter.list_fails_as_expected"/>
    <testcase time="0.01" classname="filter" name="log_filter.list_subsets_USUBJID"/>
    <testcase time="0.00300000000000011" classname="filter" name="log_filter.list_subsets_USUBJID"/>
    <testcase time="0.00299999999999989" classname="filter" name="log_filter.list_subsets_USUBJID"/>
    <testcase time="0.00300000000000011" classname="filter" name="log_filter.list_subsets_USUBJID"/>
    <testcase time="0.00299999999999989" classname="filter" name="log_filter.list_subsets_USUBJID"/>
    <testcase time="0.004" classname="filter" name="log_filter.list_subsets_USUBJID"/>
    <testcase time="0.00600000000000001" classname="filter" name="log_filter.list_subsets_USUBJID"/>
    <testcase time="0.00800000000000001" classname="filter" name="log_filter.list_preserves_label_attribute_in_all_tables"/>
    <testcase time="0.00300000000000011" classname="filter" name="log_filter.list_preserves_label_attribute_in_all_tables"/>
    <testcase time="0.004" classname="filter" name="log_filter.list_preserves_label_attribute_in_all_tables"/>
    <testcase time="0.00299999999999989" classname="filter" name="log_filter.list_preserves_label_attribute_in_all_tables"/>
    <testcase time="0.002" classname="filter" name="log_filter.list_preserves_label_attribute_in_all_tables"/>
    <testcase time="0.00300000000000011" classname="filter" name="log_filter.list_preserves_label_attribute_in_all_tables"/>
    <testcase time="0.0069999999999999" classname="filter" name="log_filter_works_with_long_conditions"/>
    <testcase time="0.00500000000000012" classname="filter" name="log_filter_works_with_long_conditions"/>
    <testcase time="0.0069999999999999" classname="filter" name="get_log_works_as_expected"/>
    <testcase time="0.002" classname="filter" name="get_log_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="filter" name="get_log_works_as_expected"/>
    <testcase time="0.00299999999999989" classname="filter" name="get_log_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="filter" name="get_log_works_as_expected"/>
    <testcase time="0.002" classname="filter" name="get_log_works_as_expected"/>
    <testcase time="0.00499999999999989" classname="filter" name="get_log_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="filter" name="get_log_works_as_expected"/>
    <testcase time="0.0069999999999999" classname="filter" name="get_log_works_as_expected_when_incl.adsl_FALSE"/>
    <testcase time="0.002" classname="filter" name="get_log_works_as_expected_when_incl.adsl_FALSE"/>
    <testcase time="0.00299999999999989" classname="filter" name="get_log_works_as_expected_when_incl.adsl_FALSE"/>
    <testcase time="0.00300000000000011" classname="filter" name="get_log_works_as_expected_when_incl.adsl_FALSE"/>
    <testcase time="0.00800000000000001" classname="filter" name="get_log_works_as_expected_with_suffix"/>
    <testcase time="0.002" classname="filter" name="get_log_works_as_expected_with_suffix"/>
    <testcase time="0.00299999999999989" classname="filter" name="get_log_works_as_expected_with_suffix"/>
    <testcase time="0.00300000000000011" classname="filter" name="get_log_works_as_expected_with_suffix"/>
    <testcase time="0.00299999999999989" classname="filter" name="get_log_works_as_expected_with_suffix"/>
    <testcase time="0.002" classname="filter" name="get_log_works_as_expected_with_suffix"/>
    <testcase time="0.002" classname="filter" name="get_log_works_as_expected_with_suffix"/>
    <testcase time="0.00300000000000011" classname="filter" name="get_log_works_as_expected_with_suffix"/>
    <testcase time="0.0109999999999999" classname="filter" name="print_log.list_works_as_expected"/>
    <testcase time="0.004" classname="filter" name="print_log.list_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="filter" name="print_log.list_works_as_expected"/>
    <testcase time="0.00299999999999989" classname="filter" name="print_log.list_works_as_expected"/>
    <testcase time="0.00800000000000001" classname="filter" name="print_log.list_works_as_expect_when_no_filtering_is_performed"/>
    <testcase time="0.00300000000000011" classname="filter" name="print_log.list_works_as_expect_when_no_filtering_is_performed"/>
    <testcase time="0.00299999999999989" classname="filter" name="print_log.list_works_as_expect_when_no_filtering_is_performed"/>
    <testcase time="0.00300000000000011" classname="filter" name="print_log.list_works_as_expect_when_no_filtering_is_performed"/>
    <testcase time="0.00299999999999989" classname="filter" name="print_log.list_works_as_expect_when_no_filtering_is_performed"/>
    <testcase time="0.004" classname="filter" name="print_log.list_works_as_expect_when_no_filtering_is_performed"/>
    <testcase time="0.00300000000000011" classname="filter" name="print_log.list_works_as_expect_when_no_filtering_is_performed"/>
    <testcase time="0.00800000000000001" classname="filter" name="print_log.data.frame_works_as_expected"/>
    <testcase time="0.00299999999999989" classname="filter" name="print_log.data.frame_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="filter" name="print_log.data.frame_works_as_expected"/>
    <testcase time="0.00600000000000001" classname="filter" name="print_log.data.frame_works_as_expected"/>
  </testsuite>
  <testsuite name="join_adsub_adsl" timestamp="2025-04-30T20:27:38Z" hostname="dfca44c794bb" tests="39" skipped="0" failures="0" errors="0" time="0.263">
    <testcase time="0.022" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_with_default_values"/>
    <testcase time="0.00099999999999989" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_with_default_values"/>
    <testcase time="0.00100000000000011" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_with_default_values"/>
    <testcase time="0.002" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_with_default_values"/>
    <testcase time="0.00299999999999989" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_with_default_values"/>
    <testcase time="0.0130000000000001" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_when_no_column_is_selected"/>
    <testcase time="0.00099999999999989" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_when_no_column_is_selected"/>
    <testcase time="0.00100000000000011" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_when_no_column_is_selected"/>
    <testcase time="0.0089999999999999" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_when_no_column_is_selected"/>
    <testcase time="0.00100000000000011" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_when_no_column_is_selected"/>
    <testcase time="0.034" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_when_no_column_is_selected"/>
    <testcase time="0.01" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_when_no_column_is_selected"/>
    <testcase time="0.002" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_when_no_column_is_selected"/>
    <testcase time="0.00099999999999989" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_as_expected_when_no_column_is_selected"/>
    <testcase time="0.0190000000000001" classname="join_adsub_adsl" name="join_adsub_adsl.list_throw_a_warning_when_column_already_exist_in_adsl."/>
    <testcase time="0.0169999999999999" classname="join_adsub_adsl" name="join_adsub_adsl.list_throw_a_warning_the_required_column_doesn_t_exist."/>
    <testcase time="0.0190000000000001" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_with_factor_PARAM_and_PARAMCD_column."/>
    <testcase time="0.00099999999999989" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_with_factor_PARAM_and_PARAMCD_column."/>
    <testcase time="0.00099999999999989" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_with_factor_PARAM_and_PARAMCD_column."/>
    <testcase time="0.00300000000000011" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_with_factor_PARAM_and_PARAMCD_column."/>
    <testcase time="0.00299999999999989" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_with_factor_PARAM_and_PARAMCD_column."/>
    <testcase time="0.0130000000000001" classname="join_adsub_adsl" name="join_adsub_adsl.list_keep_all_NA_columns_if_drop_na_FALSE."/>
    <testcase time="0.00299999999999989" classname="join_adsub_adsl" name="join_adsub_adsl.list_keep_all_NA_columns_if_drop_na_FALSE."/>
    <testcase time="0.022" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_with_empty_strings"/>
    <testcase time="0.00100000000000011" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_with_empty_strings"/>
    <testcase time="0.002" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_with_empty_strings"/>
    <testcase time="0.00299999999999989" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_with_empty_strings"/>
    <testcase time="0.016" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_with_factor_AVALC_column."/>
    <testcase time="0.00100000000000011" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_with_factor_AVALC_column."/>
    <testcase time="0.00099999999999989" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_with_factor_AVALC_column."/>
    <testcase time="0.00300000000000011" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_with_factor_AVALC_column."/>
    <testcase time="0.00299999999999989" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_with_factor_AVALC_column."/>
    <testcase time="0.016" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_with_factor_AVALC_column_and_drop_lvl_TRUE."/>
    <testcase time="0.00100000000000011" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_with_factor_AVALC_column_and_drop_lvl_TRUE."/>
    <testcase time="0.00099999999999989" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_with_factor_AVALC_column_and_drop_lvl_TRUE."/>
    <testcase time="0.00300000000000011" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_with_factor_AVALC_column_and_drop_lvl_TRUE."/>
    <testcase time="0.00299999999999989" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_with_factor_AVALC_column_and_drop_lvl_TRUE."/>
    <testcase time="0.00500000000000012" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_with_factor_AVALC_column_and_drop_lvl_TRUE."/>
    <testcase time="0.002" classname="join_adsub_adsl" name="join_adsub_adsl.list_works_with_factor_AVALC_column_and_drop_lvl_TRUE."/>
  </testsuite>
  <testsuite name="pivot" timestamp="2025-04-30T20:27:38Z" hostname="dfca44c794bb" tests="17" skipped="0" failures="0" errors="0" time="0.101">
    <testcase time="0.0109999999999999" classname="pivot" name="multi_id_pivot_wider_works_as_expected."/>
    <testcase time="0.00300000000000011" classname="pivot" name="multi_id_pivot_wider_works_as_expected."/>
    <testcase time="0.00800000000000001" classname="pivot" name="multi_id_pivot_wider_works_as_expected_with_factor_as_value."/>
    <testcase time="0.00299999999999989" classname="pivot" name="multi_id_pivot_wider_works_as_expected_with_factor_as_value."/>
    <testcase time="0.0089999999999999" classname="pivot" name="multi_id_pivot_wider_works_as_expected_with_factor_as_value_and_drop_lvl_TRUE"/>
    <testcase time="0.002" classname="pivot" name="multi_id_pivot_wider_works_as_expected_with_factor_as_value_and_drop_lvl_TRUE"/>
    <testcase time="0.00800000000000001" classname="pivot" name="multi_id_pivot_wider_works_as_expected_with_drop_na_argument."/>
    <testcase time="0.00300000000000011" classname="pivot" name="multi_id_pivot_wider_works_as_expected_with_drop_na_argument."/>
    <testcase time="0.0069999999999999" classname="pivot" name="multi_id_pivot_wider_works_as_expected_with_drop_na_argument."/>
    <testcase time="0.00600000000000001" classname="pivot" name="multi_id_pivot_wider_works_as_expected_with_drop_na_argument."/>
    <testcase time="0.01" classname="pivot" name="multi_id_pivot_wider_works_as_expected_when_the_unique_identification_depends_on_several_columns"/>
    <testcase time="0.004" classname="pivot" name="multi_id_pivot_wider_works_as_expected_when_the_unique_identification_depends_on_several_columns"/>
    <testcase time="0.00300000000000011" classname="pivot" name="multi_id_pivot_wider_works_as_expected_when_the_unique_identification_depends_on_several_columns"/>
    <testcase time="0.0089999999999999" classname="pivot" name="poly_pivot_wider_works_as_expected."/>
    <testcase time="0.00300000000000011" classname="pivot" name="poly_pivot_wider_works_as_expected."/>
    <testcase time="0.0089999999999999" classname="pivot" name="poly_pivot_wider_works_as_expected_with_default_label."/>
    <testcase time="0.00300000000000011" classname="pivot" name="poly_pivot_wider_works_as_expected_with_default_label."/>
  </testsuite>
  <testsuite name="propagate" timestamp="2025-04-30T20:27:38Z" hostname="dfca44c794bb" tests="3" skipped="2" failures="0" errors="0" time="0.054">
    <testcase time="0.0189999999999999" classname="propagate" name="propagate.list_works_as_expected">
      <skipped message="Reason: On CRAN ('test-propagate.R:20:3')"/>
    </testcase>
    <testcase time="0.026" classname="propagate" name="propagate.list_works_as_expected_in_safe_mode"/>
    <testcase time="0.0089999999999999" classname="propagate" name="propagate.list_works_as_expected_in_safe_mode">
      <skipped message="Reason: On CRAN ('test-propagate.R:48:3')"/>
    </testcase>
  </testsuite>
  <testsuite name="reformat" timestamp="2025-04-30T20:27:38Z" hostname="dfca44c794bb" tests="59" skipped="0" failures="0" errors="0" time="0.322">
    <testcase time="0.034" classname="reformat" name="reformat_fails_for_numeric_or_logical"/>
    <testcase time="0.00600000000000001" classname="reformat" name="reformat_for_characters_works_as_expected_when_.string_as_fct_is_FALSE"/>
    <testcase time="0.00700000000000012" classname="reformat" name="reformat_for_characters_works_as_expected_when_.to_NA_is_NULL"/>
    <testcase time="0.00600000000000001" classname="reformat" name="reformat_for_characters_works_as_expected_when_.to_NA_is_not_NULL"/>
    <testcase time="0.00600000000000001" classname="reformat" name=".to_NA_attribute_of_rule_is_used_if_not_specified_in_reformat"/>
    <testcase time="0.0089999999999999" classname="reformat" name="setting_.to_NA_to_NULL_in_reformat_prevents_conversion_to_NA_specified_in_rule"/>
    <testcase time="0.00600000000000001" classname="reformat" name="reformat_arguments_have_priorities_over_the_rule_attributes"/>
    <testcase time="0.00700000000000012" classname="reformat" name="reformat_for_characters_works_as_expected_when_.string_as_fct_is_TRUE"/>
    <testcase time="0.0069999999999999" classname="reformat" name="reformat_for_characters_works_as_expected_when_.string_as_fct_is_TRUE_and_.na_last_is_false"/>
    <testcase time="0.004" classname="reformat" name="reformat_for_characters_works_as_expected_when_.string_as_fct_is_TRUE_and_.na_last_is_false"/>
    <testcase time="0.00800000000000001" classname="reformat" name="reformat_as_character_works_as_expected_with_verbose_TRUE"/>
    <testcase time="0.00700000000000012" classname="reformat" name="reformat_for_factors_works_as_expected"/>
    <testcase time="0.00299999999999989" classname="reformat" name="reformat_for_factors_works_as_expected"/>
    <testcase time="0.004" classname="reformat" name="reformat_for_factors_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="reformat" name="reformat_for_factors_works_as_expected"/>
    <testcase time="0.0089999999999999" classname="reformat" name="reformat_factor_works_as_expected_when_the_level_doesn_t_exist"/>
    <testcase time="0.00299999999999989" classname="reformat" name="reformat_factor_works_as_expected_when_the_level_doesn_t_exist"/>
    <testcase time="0.00600000000000001" classname="reformat" name="reformat_factor_works_as_expected_when_the_level_doesn_t_exist_and_.drop_TRUE"/>
    <testcase time="0.00300000000000011" classname="reformat" name="reformat_factor_works_as_expected_when_the_level_doesn_t_exist_and_.drop_TRUE"/>
    <testcase time="0.002" classname="reformat" name="reformat_factor_works_as_expected_when_the_level_doesn_t_exist_and_.drop_TRUE"/>
    <testcase time="0.00299999999999989" classname="reformat" name="reformat_factor_works_as_expected_when_the_level_doesn_t_exist_and_.drop_TRUE"/>
    <testcase time="0.00500000000000012" classname="reformat" name="reformat_factor_works_as_expected_when_.na_last_FALSE"/>
    <testcase time="0.00299999999999989" classname="reformat" name="reformat_factor_works_as_expected_when_.na_last_FALSE"/>
    <testcase time="0.00500000000000012" classname="reformat" name="reformat_factor_works_as_expected_when_.to_NA_is_NULL"/>
    <testcase time="0.00600000000000001" classname="reformat" name="reformat_factor_works_as_expected_when_.to_NA_is_not_NULL"/>
    <testcase time="0.002" classname="reformat" name="reformat_factor_works_as_expected_when_.to_NA_is_not_NULL"/>
    <testcase time="0.00600000000000001" classname="reformat" name="reformat_factor_works_as_expected_when_.to_NA_is_passed_via_a_rule"/>
    <testcase time="0.002" classname="reformat" name="reformat_factor_works_as_expected_when_.to_NA_is_passed_via_a_rule"/>
    <testcase time="0.0089999999999999" classname="reformat" name="reformat_factor_works_as_expected_when_the_level_doesn_t_exist_and_.na_last_is_false."/>
    <testcase time="0.00300000000000011" classname="reformat" name="reformat_factor_works_as_expected_when_the_level_doesn_t_exist_and_.na_last_is_false."/>
    <testcase time="0.00800000000000001" classname="reformat" name="reformat_as_factor_works_as_expected_with_verbose_TRUE"/>
    <testcase time="0.00800000000000001" classname="reformat" name="reformat_for_list_works_as_expected"/>
    <testcase time="0.00199999999999978" classname="reformat" name="reformat_for_list_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="reformat" name="reformat_for_list_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="reformat" name="reformat_for_list_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="reformat" name="reformat_for_list_works_as_expected"/>
    <testcase time="0.00599999999999978" classname="reformat" name="reformat_for_list_works_as_does_not_change_the_data_for_no_rules"/>
    <testcase time="0.00200000000000022" classname="reformat" name="reformat_for_list_works_as_does_not_change_the_data_for_no_rules"/>
    <testcase time="0.0129999999999999" classname="reformat" name="reformat_for_list_works_with_all_datasets_keyword"/>
    <testcase time="0.00300000000000011" classname="reformat" name="reformat_for_list_works_with_all_datasets_keyword"/>
    <testcase time="0.00299999999999967" classname="reformat" name="reformat_for_list_works_with_all_datasets_keyword"/>
    <testcase time="0.00200000000000022" classname="reformat" name="reformat_for_list_works_with_all_datasets_keyword"/>
    <testcase time="0.00200000000000022" classname="reformat" name="reformat_for_list_works_with_all_datasets_keyword"/>
    <testcase time="0.00299999999999967" classname="reformat" name="reformat_for_list_works_with_all_datasets_keyword"/>
    <testcase time="0.00600000000000023" classname="reformat" name="reformat_for_list_works_as_does_not_change_the_data_for_no_rules"/>
    <testcase time="0.00299999999999967" classname="reformat" name="reformat_for_list_works_as_does_not_change_the_data_for_no_rules"/>
    <testcase time="0.00800000000000001" classname="reformat" name="reformat_for_list_works_as_expected_when_verbose_is_TRUE"/>
    <testcase time="0.004" classname="reformat" name="reformat_for_list_works_as_expected_when_verbose_is_TRUE"/>
    <testcase time="0.00300000000000011" classname="reformat" name="reformat_for_list_works_as_expected_when_verbose_is_TRUE"/>
    <testcase time="0.0110000000000001" classname="reformat" name="reformat_for_list_works_as_expected_when_verbose_is_TRUE_and_tables_are_missing"/>
    <testcase time="0.00599999999999978" classname="reformat" name="reformat_for_list_works_as_expected_when_verbose_is_TRUE_and_tables_are_missing"/>
    <testcase time="0.00700000000000012" classname="reformat" name="reformat_for_list_works_as_expected_when_verbose_is_TRUE_and_tables_are_missing"/>
    <testcase time="0.00300000000000011" classname="reformat" name="reformat_for_list_works_as_expected_when_verbose_is_TRUE_and_tables_are_missing"/>
    <testcase time="0.00599999999999978" classname="reformat" name="h_expand_all_datasets_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="reformat" name="h_expand_all_datasets_works_as_expected"/>
    <testcase time="0.00499999999999989" classname="reformat" name="h_expand_all_datasets_works_as_expected_when_all_datasets_is_NULL"/>
    <testcase time="0.00300000000000011" classname="reformat" name="h_expand_all_datasets_works_as_expected_when_all_datasets_is_NULL"/>
    <testcase time="0.00600000000000023" classname="reformat" name="h_expand_all_datasets_works_as_expected_when_ls_datasets_is_NULL"/>
    <testcase time="0.00299999999999967" classname="reformat" name="h_expand_all_datasets_works_as_expected_when_ls_datasets_is_NULL"/>
  </testsuite>
  <testsuite name="render_safe" timestamp="2025-04-30T20:27:39Z" hostname="dfca44c794bb" tests="25" skipped="0" failures="0" errors="0" time="0.109">
    <testcase time="0.00800000000000001" classname="render_safe" name="safe_transformer_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="render_safe" name="safe_transformer_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="render_safe" name="safe_transformer_works_as_expected"/>
    <testcase time="0.00599999999999978" classname="render_safe" name="add_whisker_and_remove_whisker_works"/>
    <testcase time="0.00300000000000011" classname="render_safe" name="add_whisker_and_remove_whisker_works"/>
    <testcase time="0.00300000000000011" classname="render_safe" name="add_whisker_and_remove_whisker_works"/>
    <testcase time="0.00299999999999967" classname="render_safe" name="add_whisker_and_remove_whisker_works"/>
    <testcase time="0.00500000000000034" classname="render_safe" name="add_whisker_and_remove_whisker_works"/>
    <testcase time="0.00599999999999978" classname="render_safe" name="render_safe_works"/>
    <testcase time="0.00300000000000011" classname="render_safe" name="render_safe_works"/>
    <testcase time="0.00300000000000011" classname="render_safe" name="render_safe_works"/>
    <testcase time="0.00299999999999967" classname="render_safe" name="render_safe_works"/>
    <testcase time="0.00700000000000012" classname="render_safe" name="render_safe_works_with_custom_whiskers"/>
    <testcase time="0.00300000000000011" classname="render_safe" name="render_safe_works_with_custom_whiskers"/>
    <testcase time="0.00299999999999967" classname="render_safe" name="render_safe_works_with_custom_whiskers"/>
    <testcase time="0.00300000000000011" classname="render_safe" name="render_safe_works_with_custom_whiskers"/>
    <testcase time="0.0089999999999999" classname="render_safe" name="render_safe_works_as_expected_when_matching_a_non_string_object"/>
    <testcase time="0.00300000000000011" classname="render_safe" name="render_safe_works_as_expected_when_matching_a_non_string_object"/>
    <testcase time="0.00200000000000022" classname="render_safe" name="render_safe_works_as_expected_when_matching_a_non_string_object"/>
    <testcase time="0.00699999999999967" classname="render_safe" name="show_whisker_works"/>
    <testcase time="0.00300000000000011" classname="render_safe" name="show_whisker_works"/>
    <testcase time="0.00700000000000012" classname="render_safe" name="show_whisker_works_when_non_string_value_are_present_in_the_whisker_environment"/>
    <testcase time="0.004" classname="render_safe" name="show_whisker_works_when_non_string_value_are_present_in_the_whisker_environment"/>
    <testcase time="0.00300000000000011" classname="render_safe" name="show_whisker_works_when_non_string_value_are_present_in_the_whisker_environment"/>
    <testcase time="0.00299999999999967" classname="render_safe" name="show_whisker_works_when_non_string_value_are_present_in_the_whisker_environment"/>
  </testsuite>
  <testsuite name="rules" timestamp="2025-04-30T20:27:39Z" hostname="dfca44c794bb" tests="39" skipped="2" failures="0" errors="0" time="0.452">
    <testcase time="0.00900000000000034" classname="rules" name="rule_create_works_with_arguments"/>
    <testcase time="0.0949999999999998" classname="rules" name="rule_create_works_with_arguments"/>
    <testcase time="0.00300000000000011" classname="rules" name="rule_create_works_with_arguments"/>
    <testcase time="0.004" classname="rules" name="rule_coerce_NA_to_NA_character_"/>
    <testcase time="0.024" classname="rules" name="rule_coerce_NA_to_NA_character_"/>
    <testcase time="0.00499999999999989" classname="rules" name="rule_works_for_multiple_map"/>
    <testcase time="0.00499999999999989" classname="rules" name="rule_works_for_multiple_map"/>
    <testcase time="0.00900000000000034" classname="rules" name="rule_fails_when_one_value_is_mapped_to_multiple"/>
    <testcase time="0.0869999999999997" classname="rules" name="rule_fails_when_one_value_is_mapped_to_multiple"/>
    <testcase time="0.0100000000000002" classname="rules" name="rule_fails_for_values_that_is_not_character_logical_numeric"/>
    <testcase time="0.024" classname="rules" name="rule_printed_correctly">
      <skipped message="Reason: On CRAN ('test-rules.R:44:3')"/>
    </testcase>
    <testcase time="0.0339999999999998" classname="rules" name="rule_with_multiple_matching_printed_correctly">
      <skipped message="Reason: On CRAN ('test-rules.R:48:3')"/>
    </testcase>
    <testcase time="0.0169999999999999" classname="rules" name="list2rules_works_as_expected"/>
    <testcase time="0.00200000000000022" classname="rules" name="list2rules_works_as_expected"/>
    <testcase time="0.00299999999999967" classname="rules" name="list2rules_works_as_expected"/>
    <testcase time="0.00700000000000012" classname="rules" name="list2rules_works_as_expected_with_additional_arguments"/>
    <testcase time="0.00099999999999989" classname="rules" name="list2rules_works_as_expected_with_additional_arguments"/>
    <testcase time="0.00300000000000011" classname="rules" name="list2rules_works_as_expected_with_additional_arguments"/>
    <testcase time="0.004" classname="rules" name="list2rules_works_as_expected_with_additional_arguments"/>
    <testcase time="0.00300000000000011" classname="rules" name="list2rules_works_as_expected_with_additional_arguments"/>
    <testcase time="0.004" classname="rules" name="list2rules_works_as_expected_with_additional_arguments"/>
    <testcase time="0.0110000000000001" classname="rules" name="list2rules_can_handle_duplicated_rules"/>
    <testcase time="0.00199999999999978" classname="rules" name="list2rules_can_handle_duplicated_rules"/>
    <testcase time="0.00700000000000012" classname="rules" name="as.list_convert_rules_into_list_correctly"/>
    <testcase time="0.00800000000000001" classname="rules" name="as.list_and_rule_are_reversible"/>
    <testcase time="0.00700000000000012" classname="rules" name="as.list_and_rule_are_reversible_when_.to_NA_is_NULL"/>
    <testcase time="0.00599999999999978" classname="rules" name="combine_rules_works_as_expected"/>
    <testcase time="0.004" classname="rules" name="combine_rules_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="rules" name="combine_rules_works_as_expected_with_NULL_values"/>
    <testcase time="0.00299999999999967" classname="rules" name="combine_rules_works_as_expected_with_NULL_values"/>
    <testcase time="0.00900000000000034" classname="rules" name="combine_rules_works_as_expected_with_NULL_values"/>
    <testcase time="0.00299999999999967" classname="rules" name="combine_rules_works_as_expected_with_NULL_values"/>
    <testcase time="0.00800000000000001" classname="rules" name="combine_rules_fails_as_expected_when_both_rules_are_NULL_values"/>
    <testcase time="0.00500000000000034" classname="rules" name="combine_list_rules_works_as_expected"/>
    <testcase time="0.00299999999999967" classname="rules" name="combine_list_rules_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="rules" name="combine_list_rules_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="rules" name="combine_list_rules_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="rules" name="combine_list_rules_works_as_expected"/>
    <testcase time="0.00800000000000001" classname="rules" name="combine_list_rules_fails_as_expected_when_elements_are_not_rules"/>
  </testsuite>
  <testsuite name="subject_level_flag" timestamp="2025-04-30T20:27:39Z" hostname="dfca44c794bb" tests="9" skipped="0" failures="0" errors="0" time="0.062">
    <testcase time="0.0189999999999997" classname="subject_level_flag" name="subject_level_flag_works"/>
    <testcase time="0.00300000000000011" classname="subject_level_flag" name="subject_level_flag_works"/>
    <testcase time="0.00199999999999978" classname="subject_level_flag" name="subject_level_flag_works"/>
    <testcase time="0.00300000000000011" classname="subject_level_flag" name="subject_level_flag_works"/>
    <testcase time="0.0089999999999999" classname="subject_level_flag" name="subject_level_flag_messaging"/>
    <testcase time="0.00500000000000034" classname="subject_level_flag" name="subject_level_flag_messaging"/>
    <testcase time="0.00499999999999989" classname="subject_level_flag" name="subject_level_flag_messaging"/>
    <testcase time="0.00700000000000012" classname="subject_level_flag" name="subject_level_flag_messaging"/>
    <testcase time="0.0089999999999999" classname="subject_level_flag" name="subject_level_flag_messaging"/>
  </testsuite>
  <testsuite name="unite" timestamp="2025-04-30T20:27:39Z" hostname="dfca44c794bb" tests="7" skipped="0" failures="0" errors="0" time="0.038">
    <testcase time="0.0110000000000001" classname="unite" name="ls_unite_works_as_expected_with_factors"/>
    <testcase time="0.00199999999999978" classname="unite" name="ls_unite_works_as_expected_with_factors"/>
    <testcase time="0.00600000000000023" classname="unite" name="ls_unite_works_as_expected_with_factors"/>
    <testcase time="0.00700000000000012" classname="unite" name="ls_unite_works_as_expected_with_character"/>
    <testcase time="0.00199999999999978" classname="unite" name="ls_unite_works_as_expected_with_character"/>
    <testcase time="0.00800000000000001" classname="unite" name="ls_unite_works_as_expected_with_more_than_2_columns"/>
    <testcase time="0.00200000000000022" classname="unite" name="ls_unite_works_as_expected_with_more_than_2_columns"/>
  </testsuite>
  <testsuite name="utils" timestamp="2025-04-30T20:27:39Z" hostname="dfca44c794bb" tests="14" skipped="0" failures="0" errors="0" time="0.054">
    <testcase time="0.00699999999999967" classname="utils" name="attr_label_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="utils" name="attr_label_works_as_expected"/>
    <testcase time="0.00499999999999989" classname="utils" name="attr_label_works_as_expected"/>
    <testcase time="0.0110000000000001" classname="utils" name="attr_label_df_works_as_expected"/>
    <testcase time="0.00499999999999989" classname="utils" name="attr_label_df_works_as_expected"/>
    <testcase time="0.00600000000000023" classname="utils" name="get_args_works_as_expected"/>
    <testcase time="0.00099999999999989" classname="utils" name="get_args_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="utils" name="get_args_works_as_expected"/>
    <testcase time="0.00099999999999989" classname="utils" name="get_args_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="utils" name="get_args_works_as_expected"/>
    <testcase time="0.00199999999999978" classname="utils" name="get_args_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="utils" name="get_args_works_as_expected"/>
    <testcase time="0.00099999999999989" classname="utils" name="get_args_works_as_expected"/>
    <testcase time="0.00300000000000011" classname="utils" name="get_args_works_as_expected"/>
  </testsuite>
</testsuites>
